---
- hosts: all
  sudo: yes
  tasks:

    - shell: sudo apt-get update


    ###################################################################
    #
    # Install dependancies
    #
    - name: check if apt is updated
      apt: cache_valid_time=3600 update-cache=yes
    
    - name: Install dependancies
      action: apt pkg={{item}} state=installed
      with_items:
        - mysql-client-core-5.5
        - mysql-server
        - mysql-client
        - apache2
        - php5
        - php5-mysql
        - php5-sqlite
        - phpmyadmin
        - build-essential
        - libcairo2-dev
        - curl
        - vim
        - gdal-bin
        - git-core
        - screen
        - sendmail
        - default-jre-headless
        - redis-server
        - libapache2-mod-php5
        - php-pear
        - php5-gd
        - python-mysqldb
        - python-beautifulsoup
        - python-cairo
        - python-dev
        - python-gdal
        - python-imaging
        - python-numpy
        - python-pip

    ###################################################################
    #
    # Setup Apache
    #
    - name: Move default Apache root
      action: command mv /var/www /var/www-old

    - name: Symlink /var/www to /usr/local/fieldpapers 
      action: command ln -s /usr/local/fieldpapers /var/www

    - name: Make fieldpapers site
      command: "{{ item }} chdir=/usr/local/fieldpapers/site"
      with_items:
        - make

    ###################################################################
    #
    # Setup MySQL
    #
    - name: Create fieldpapers database
      mysql_db: name=fieldpapers state=present encoding='utf8'

    - name: Create a user named vagrant and password vagrantssh
      mysql_user: name=vagrant password=vagrant priv=*.*:ALL state=present
      
    - name: Create fieldpapers database user
      mysql_user: name=fieldpapers password=w4lks priv='fieldpapers.*:ALL' state=present

    - name: Load database schema
      mysql_db: name=fieldpapers state=import target=/usr/local/fieldpapers/site/doc/create.mysql

    - name: Install python requirements
      action: pip name={{item}} state=latest
      with_items:
        - ModestMaps
        - celery
        - raven
        - redis
        - requests

    #- pip: name=BlobDetector
    # Commenting pip install of BlobDetector until the issue below is fixed
    #https://github.com/migurski/Blobdetector/issues/1
    - name: "Install BlobDetector from a local package instead of pip for now"
      command: "python setup.py install"
      args:
        chdir: "/usr/local/fieldpapers/provisioning/BlobDetector-1.0.0/"

    - name: Install packages via pecl.
      command: "pecl install {{ item }}"
      register: pecl_result
      changed_when: "pecl_result.rc == 0"
      failed_when: "not (('already installed' in pecl_result.stdout) or ('install ok:' in pecl_result.stdout))"
      with_items: 
        - redis

    - name: Install packages via pear
      command: pear install {{ item }}
      register: pear_result
      changed_when: "'already installed' not in pear_result.stdout"
      failed_when: "'already installed' not in pear_result.stdout and pear_result.stderr"
      with_items:
        - Crypt_HMAC 
        - HTTP_Request 
        - DB
        - Crypt_HMAC2 
        - MDB2 
        - MDB2#mysql

    - name: Create libproj symlink
      file: src=/usr/lib/libproj.so.0 dest=/usr/lib/libproj.so state=link

    - name: Copy over apache default site configuration
      copy: src=configs/apache_default dest=/etc/apache2/sites-available/default owner=root

    - name: Copy redis ini to php5/conf.d
      copy: src=configs/20-redis.ini dest=/etc/php5/conf.d/20-redis.ini owner=root

    - name: Copy php ini to php5/apache2
      copy: src=configs/php.ini dest=/etc/php5/apache2/php.ini owner=root

    - name: Copy php.init into place
      copy: src=configs/init.php.txt dest=/usr/local/fieldpapers/site/lib/init.php owner=root

    - name: Copy crontab /etc/init
      copy: src=configs/crontab.txt dest=/etc/cron.d/fieldpapers owner=root

    - name: Copy celery configuration into upstart directory
      copy: src=configs/celery.conf dest=/etc/init/celery.conf owner=root

    - name: Start celery
      command: start celery
      sudo: yes

    - name: Restart Apache
      action: service name=apache2 state=restarted

